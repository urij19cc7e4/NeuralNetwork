#include <iostream>

#include "nn_rfm.h"
#include "cnn.h"
#include "fnn.h"
#include "rnn.h"
#include "nnb.h"
#include "wx_wrapper.h"

using namespace std;

//#include <iomanip>
//#include <fstream>
//
//template <nn_params::nn_activ_t activ>
//void to_file(string str)
//{
//	ofstream activ_file("C:\\Users\\Urij\\Downloads\\" + str + "_activ.csv");
//	ofstream deriv_file("C:\\Users\\Urij\\Downloads\\" + str + "_deriv.csv");
//
//	activ_file << "X,Y\n";
//	deriv_file << "X,Y\n";
//
//	for (double x = -16; x < 16; x += 0.0625)
//	{
//		activ_file << setw(8) << x << "," << setw(8) << activation<activ>(x, 1) << "\n";
//		deriv_file << setw(8) << x << "," << setw(8) << derivation<activ>(x, activation<activ>(x, 1), 1) << "\n";
//	}
//
//	activ_file.close();
//	deriv_file.close();
//}

//void f(wx_wrapper&wx)
//{
//	fnn_train network({ 2, 3, 1 },nn_params::nn_activ_t::atan);
//
//	vec<double> input_t[] =
//	{
//		{ -1, -1 },
//		{ -1, 1 },
//		{ 1, -1 },
//		{ 1, 1 }
//	};
//
//	vec<double> output_t[] =
//	{
//		{ -0.5 },
//		{ 0.5 },
//		{ 0.5 },
//		{ -0.5 }
//	};
//
//	vec<double> input_test[] =
//	{
//		{ -2, 0 },
//		{ 5, 1 },
//		{ -1, 0 },
//		{ -2, -2 }
//	};
//
//	vec<double> output_test[] =
//	{
//		{ 0.5 },
//		{ 0.5 },
//		{ 0.5 },
//		{ -0.5 }
//	};
//
//	pipe<info>* p = new pipe<info>();
//
//	wx.create_graph_wnd(*p);
//
//	network.train_stoch_mode({ input_t, output_t, 4 }, { nullptr, nullptr, 0 },nullptr,
//		p, 1000, 75, 25, false, 1, 0.90, 0.10, 0.90, 0.25, 1000, 1e-10);
//
//	cout << "0 xor 0 = " << network.pass_fwd({ -1, -1 })(0) << "\n";
//	cout << "0 xor 1 = " << network.pass_fwd({ -1, 1 })(0) << "\n";
//	cout << "1 xor 0 = " << network.pass_fwd({ 1, -1 })(0) << "\n";
//	cout << "1 xor 1 = " << network.pass_fwd({ 1, 1 })(0) << "\n";
//	cout << "\n";
//	cout << "-2 xor 0 = " << network.pass_fwd({ -2, 0 })(0) << "\n";
//	cout << "5 xor 1 = " << network.pass_fwd({ 5, 1 })(0) << "\n";
//	cout << "-1 xor 0 = " << network.pass_fwd({ -1, 0 })(0) << "\n";
//	cout << "-2 xor -2 = " << network.pass_fwd({ -2, -2 })(0) << "\n";
//
//	this_thread::sleep_for(chrono::milliseconds(1000));
//	delete p;
//}

#include "light_appx.h"

int main(int argc,char*argv[],char*argp[])
{
	/*to_file<nn_params::nn_activ_t::signed_pos>("signed_pos");
	to_file<nn_params::nn_activ_t::signed_neg>("signed_neg");
	to_file<nn_params::nn_activ_t::thresh_pos>("thresh_pos");
	to_file<nn_params::nn_activ_t::thresh_neg>("thresh_neg");
	to_file<nn_params::nn_activ_t::step_sym>("step_sym");
	to_file<nn_params::nn_activ_t::step_pos>("step_pos");
	to_file<nn_params::nn_activ_t::step_neg>("step_neg");
	to_file<nn_params::nn_activ_t::rad_bas_pos>("rad_bas_pos");
	to_file<nn_params::nn_activ_t::rad_bas_neg>("rad_bas_neg");
	to_file<nn_params::nn_activ_t::sigmoid_log>("sigmoid_log");
	to_file<nn_params::nn_activ_t::sigmoid_rat>("sigmoid_rat");
	to_file<nn_params::nn_activ_t::atan>("atan");
	to_file<nn_params::nn_activ_t::tanh>("tanh");
	to_file<nn_params::nn_activ_t::elu>("elu");
	to_file<nn_params::nn_activ_t::gelu>("gelu");
	to_file<nn_params::nn_activ_t::lelu>("lelu");
	to_file<nn_params::nn_activ_t::relu>("relu");
	to_file<nn_params::nn_activ_t::mish>("mish");
	to_file<nn_params::nn_activ_t::swish>("swish");
	to_file<nn_params::nn_activ_t::softplus>("softplus");*/

	/*{
		wx_wrapper wx;
		for (int i = 0; i < 1; ++i)
			f(wx);
	}*/

	tns<FLT> tensor(
		{
			{
				{ -45.0,  67.0, -23.0,  89.0, -12.0 },
				{  34.0, -56.0,  78.0, -90.0,  12.0 },
				{  23.0,  45.0, -67.0,  89.0, -34.0 },
				{ -78.0,  90.0, -12.0,  34.0, -56.0 },
				{  67.0, -89.0,  23.0, -45.0,  78.0 }
			},
			{
				{  12.0, -34.0,  56.0, -78.0,  90.0 },
				{ -23.0,  45.0, -67.0,  89.0, -12.0 },
				{  34.0, -56.0,  78.0, -90.0,  23.0 },
				{ -45.0,  67.0, -89.0,  12.0, -34.0 },
				{  56.0, -78.0,  90.0, -23.0,  45.0 }
			},
			{
				{ -67.0,  89.0, -12.0,  34.0, -56.0 },
				{  78.0, -90.0,  23.0, -45.0,  67.0 },
				{ -89.0,  12.0, -34.0,  56.0, -78.0 },
				{  90.0, -23.0,  45.0, -67.0,  89.0 },
				{ -12.0,  34.0, -56.0,  78.0, -90.0 }
			},
			{
				{  23.0, -45.0,  67.0, -89.0,  12.0 },
				{ -34.0,  56.0, -78.0,  90.0, -23.0 },
				{  45.0, -67.0,  89.0, -12.0,  34.0 },
				{ -56.0,  78.0, -90.0,  23.0, -45.0 },
				{  67.0, -89.0,  12.0, -34.0,  56.0 }
			},
			{
				{ -78.0,  90.0, -23.0,  45.0, -67.0 },
				{  89.0, -12.0,  34.0, -56.0,  78.0 },
				{ -90.0,  23.0, -45.0,  67.0, -89.0 },
				{  12.0, -34.0,  56.0, -78.0,  90.0 },
				{ -23.0,  45.0, -67.0,  89.0, -12.0 }
			}
		}
	);


	tns<FLT> core(
		{
			{
				{ -1.0, -1.0, -1.0 },
				{ -1.0, 10.0, -1.0 },
				{ -1.0, -1.0, -1.0 },
			},
			{
				{ 1.0,  1.0,  1.0 },
				{ 1.0, -10.0, 1.0 },
				{ 1.0,  1.0,  1.0 },
			}
		}
	);

	tns<FLT> result = arithmetic::convolute(tensor, core,nn_params::nn_convo_t::many_to_one);

	/*pipe<info> pip;
	wx_wrapper wx;
	wx.create_graph_wnd(pip);
	light_appx l(1000, 0, 10000, 0, 10);
	for (int i=0;i<10000;++i)
	{
		pip.push(info(l.forward(),0));
		this_thread::sleep_for(chrono::microseconds(1));
	}*/

	unique_ptr<unique_ptr<::data<FLT>>[]> cyphers((unique_ptr<::data<FLT>>*)new unique_ptr<tns<FLT>>[10]());
	unique_ptr<unique_ptr<::data<FLT>>[]> labels((unique_ptr<::data<FLT>>*)new unique_ptr<vec<FLT>>[10]());

	(cyphers[0]) = (unique_ptr<::data<FLT>>)new tns<FLT>(move(vec<FLT>({ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,105,254,254,254,254,255,239,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,118,222,254,253,253,253,253,253,253,211,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,200,253,253,254,253,253,253,253,253,253,253,116,0,0,0,0,0,0,0,0,0,0,0,0,0,16,160,236,253,253,253,254,253,253,246,229,253,253,253,116,0,0,0,0,0,0,0,0,0,0,0,0,0,99,253,253,253,253,253,254,253,253,213,99,253,253,253,116,0,0,0,0,0,0,0,0,0,0,0,0,25,194,253,253,253,253,131,97,169,253,93,99,253,253,253,116,0,0,0,0,0,0,0,0,0,0,0,0,206,253,253,251,233,127,9,0,18,38,3,15,171,253,253,116,0,0,0,0,0,0,0,0,0,0,0,55,240,253,253,233,0,0,0,0,0,0,0,31,186,253,253,116,0,0,0,0,0,0,0,0,0,0,0,176,253,253,253,127,0,0,0,0,0,0,0,99,253,253,253,116,0,0,0,0,0,0,0,0,0,0,0,176,253,253,131,9,0,0,0,0,0,0,0,99,253,253,253,116,0,0,0,0,0,0,0,0,0,0,119,254,254,232,75,0,0,0,0,0,0,0,0,0,158,254,254,117,0,0,0,0,0,0,0,0,0,0,118,253,253,154,0,0,0,0,0,0,0,0,0,0,156,253,253,116,0,0,0,0,0,0,0,0,0,0,118,253,253,154,0,0,0,0,0,0,0,0,0,0,156,253,253,116,0,0,0,0,0,0,0,0,0,46,222,253,253,154,0,0,0,0,0,0,0,0,7,116,246,253,180,9,0,0,0,0,0,0,0,0,0,0,118,253,253,154,0,0,0,0,0,0,0,0,116,253,253,253,174,0,0,0,0,0,0,0,0,0,0,0,118,253,253,154,0,0,0,0,0,0,0,110,246,253,253,240,67,0,0,0,0,0,0,0,0,0,0,0,118,253,253,238,215,49,20,20,20,66,215,241,253,245,233,64,0,0,0,0,0,0,0,0,0,0,0,0,82,229,253,253,253,253,253,253,253,254,253,253,240,107,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,253,253,253,253,253,253,253,254,253,253,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,239,253,253,253,253,253,253,254,161,57,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }).to_tns(1, 28, 28)));
	(cyphers[1]) = (unique_ptr<::data<FLT>>)new tns<FLT>(move(vec<FLT>({ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,178,255,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,188,253,216,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,202,253,253,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,199,253,128,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,253,253,158,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,253,253,158,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,155,253,253,158,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,253,253,147,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,253,253,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,225,253,235,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,253,253,176,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,253,253,176,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,253,253,176,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,253,253,176,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,253,253,162,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,253,253,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,142,253,253,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,142,253,253,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,142,253,202,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,87,253,139,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }).to_tns(1, 28, 28)));
	(cyphers[2]) = (unique_ptr<::data<FLT>>)new tns<FLT>(move(vec<FLT>({ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,91,143,255,190,91,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,49,180,246,253,253,253,253,253,220,154,17,3,0,0,0,0,0,0,0,0,0,0,0,0,0,46,107,178,253,253,253,253,253,253,253,253,253,253,253,126,45,0,0,0,0,0,0,0,0,0,0,0,0,107,253,253,253,253,223,220,220,220,220,245,253,253,253,253,106,0,0,0,0,0,0,0,0,0,0,0,0,107,173,253,229,129,12,0,0,0,0,110,253,253,253,253,106,0,0,0,0,0,0,0,0,0,0,0,0,17,14,40,32,0,0,0,0,0,0,57,253,253,253,242,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,139,224,253,253,253,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,178,253,253,253,253,219,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,250,253,253,253,253,127,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,125,250,253,253,253,245,171,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,41,217,253,253,250,245,245,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,124,253,253,253,192,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,47,220,253,253,188,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,107,253,253,253,189,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,225,253,253,186,22,0,0,0,0,0,31,42,174,205,205,205,193,58,0,0,0,0,0,0,0,0,48,218,253,253,253,150,59,0,0,128,131,131,222,253,253,253,253,253,94,0,0,0,0,0,0,0,0,0,12,152,253,253,253,253,236,222,222,252,253,253,253,253,253,253,253,253,122,0,0,0,0,0,0,0,0,0,0,7,167,253,253,253,253,253,253,253,253,253,253,253,253,253,124,106,7,0,0,0,0,0,0,0,0,0,0,0,76,188,253,253,253,253,253,253,253,224,57,15,15,15,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,89,121,253,253,151,89,89,55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }).to_tns(1, 28, 28)));
	(cyphers[3]) = (unique_ptr<::data<FLT>>)new tns<FLT>(move(vec<FLT>({ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,80,207,255,254,254,254,97,80,80,44,0,0,0,0,0,0,0,0,0,0,0,0,0,39,158,158,158,168,253,253,253,253,253,253,253,253,253,210,38,0,0,0,0,0,0,0,0,0,0,0,0,226,253,253,253,253,253,253,253,253,253,253,253,253,253,253,241,146,0,0,0,0,0,0,0,0,0,0,0,139,253,253,253,238,113,215,253,253,253,253,253,253,253,253,253,210,43,0,0,0,0,0,0,0,0,0,0,39,34,34,34,30,0,31,148,34,204,235,253,253,253,253,253,236,64,0,0,0,0,0,0,0,0,0,0,91,0,0,0,0,0,0,0,0,35,199,253,253,253,253,244,81,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,33,202,202,216,253,253,253,253,241,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,167,253,253,253,253,253,253,253,238,82,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,253,253,253,253,253,253,253,253,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,201,253,253,253,253,253,253,253,230,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,87,87,87,248,253,253,253,253,138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,152,253,253,253,250,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,238,253,253,253,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,233,253,253,150,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,203,253,253,253,138,0,0,0,0,0,0,0,0,0,0,0,66,211,211,211,59,36,36,21,26,36,151,222,253,253,253,253,138,0,0,0,0,0,0,0,0,0,0,0,80,253,253,253,253,253,253,195,215,253,253,253,253,253,253,157,77,0,0,0,0,0,0,0,0,0,0,0,80,253,253,253,253,253,253,253,253,253,253,253,253,237,235,40,0,0,0,0,0,0,0,0,0,0,0,0,49,156,247,253,253,253,253,253,253,253,253,159,156,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,253,253,253,253,253,126,78,78,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }).to_tns(1, 28, 28)));
	(cyphers[4]) = (unique_ptr<::data<FLT>>)new tns<FLT>(move(vec<FLT>({ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,229,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,30,0,0,0,0,0,181,223,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,81,242,113,0,0,0,0,57,249,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,172,162,0,0,0,0,0,136,253,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,231,138,0,0,0,0,0,162,254,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,239,137,0,0,0,0,0,245,244,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,222,148,7,0,0,0,0,254,206,3,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,253,169,34,0,0,0,254,240,191,69,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,174,254,255,169,161,195,255,254,113,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,90,173,206,206,223,254,77,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,93,254,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,254,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,204,210,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,253,134,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,253,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,149,253,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,254,195,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,253,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,234,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,196,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }).to_tns(1, 28, 28)));
	(cyphers[5]) = (unique_ptr<::data<FLT>>)new tns<FLT>(move(vec<FLT>({ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,141,198,255,198,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,141,198,255,255,255,255,170,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,141,226,255,255,255,255,198,86,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,255,255,170,86,86,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,141,226,170,57,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,255,198,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,198,255,141,86,57,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,255,198,114,226,170,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,198,255,114,29,0,141,255,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,114,255,114,0,0,0,141,255,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,0,0,0,0,226,255,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,114,255,141,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,0,0,0,0,0,0,0,114,226,226,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,198,86,0,0,0,141,255,255,170,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,226,255,226,170,226,255,255,198,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,198,255,255,170,141,57,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }).to_tns(1, 28, 28)));
	(cyphers[6]) = (unique_ptr<::data<FLT>>)new tns<FLT>(move(vec<FLT>({ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,169,250,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,242,221,143,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,75,247,143,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,245,184,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,192,200,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,139,247,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,231,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,125,243,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,195,184,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61,251,41,0,0,0,64,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,210,7,0,96,237,254,247,107,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,84,0,6,223,84,13,87,246,72,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,254,80,0,56,151,0,0,0,147,193,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,254,41,0,13,19,0,0,0,42,253,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,254,13,0,0,0,0,0,0,14,253,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,68,255,13,0,0,0,0,0,0,77,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,254,13,0,0,0,0,0,5,181,147,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,229,105,0,0,0,0,5,156,213,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,107,246,105,14,49,95,217,209,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,107,246,253,253,240,130,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }).to_tns(1, 28, 28)));
	(cyphers[7]) = (unique_ptr<::data<FLT>>)new tns<FLT>(move(vec<FLT>({ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,109,109,109,109,110,109,129,253,110,109,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,94,217,252,252,252,252,253,252,252,252,253,252,227,134,42,0,0,0,0,0,0,0,0,0,0,0,0,176,252,252,252,252,252,252,253,252,252,252,253,252,252,252,222,139,11,0,0,0,0,0,0,0,0,0,0,217,252,252,252,128,108,108,108,108,108,108,108,232,252,252,253,252,71,0,0,0,0,0,0,0,0,0,0,42,159,252,252,210,31,0,0,0,0,0,0,0,37,252,253,252,71,0,0,0,0,0,0,0,0,0,0,0,5,119,210,252,124,31,0,0,0,0,0,0,37,252,253,231,51,0,0,0,0,0,0,0,0,0,0,0,0,0,31,195,195,31,0,0,0,0,0,0,140,252,253,158,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,221,252,191,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,218,253,253,84,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,247,252,210,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,212,252,226,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,253,252,132,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,253,255,222,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,201,252,253,55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,252,252,175,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,217,252,252,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,171,253,253,170,110,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,252,252,252,253,55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,252,252,252,154,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,252,252,168,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }).to_tns(1, 28, 28)));
	(cyphers[8]) = (unique_ptr<::data<FLT>>)new tns<FLT>(move(vec<FLT>({ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,130,130,225,255,255,109,7,116,243,200,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,95,217,253,253,253,253,253,253,253,253,253,248,11,0,0,0,0,0,0,0,0,0,0,0,0,0,27,213,253,253,240,143,111,152,253,253,253,253,194,62,0,0,0,0,0,0,0,0,0,0,0,0,0,27,213,253,215,105,31,0,7,153,253,253,253,244,73,0,0,0,0,0,0,0,0,0,0,0,0,0,0,149,253,230,34,0,0,0,69,253,253,253,253,79,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,149,253,221,13,0,0,28,156,253,253,253,176,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,236,253,175,14,0,186,253,253,253,196,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,71,253,253,174,50,199,253,253,237,74,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,92,234,253,253,253,253,237,74,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,253,253,253,236,75,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,161,253,253,253,151,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,101,253,253,237,233,158,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,253,253,173,38,186,185,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,125,237,253,114,14,0,186,185,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,238,253,176,13,0,21,211,185,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,240,253,226,11,0,0,165,253,136,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,126,253,243,69,0,0,97,246,227,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,253,178,112,112,194,248,253,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,253,253,253,253,253,253,142,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,253,253,253,235,129,45,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }).to_tns(1, 28, 28)));
	(cyphers[9]) = (unique_ptr<::data<FLT>>)new tns<FLT>(move(vec<FLT>({ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,185,255,253,253,230,132,132,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,71,242,252,252,228,231,252,252,252,167,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,166,252,252,235,92,0,14,142,252,252,150,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,204,252,234,152,44,0,0,48,225,252,180,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,164,252,232,61,0,0,0,6,179,252,252,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,252,252,76,0,0,0,44,199,252,252,252,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,252,228,32,0,0,99,231,244,220,252,203,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,169,252,207,97,97,206,234,243,32,157,252,145,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,252,252,252,252,252,200,22,11,198,231,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,131,224,252,252,142,11,0,82,252,204,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,253,253,141,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,252,220,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,252,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,253,247,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,121,253,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,216,244,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,207,252,241,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,200,249,252,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,85,252,252,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,85,252,200,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }).to_tns(1, 28, 28)));

	(labels[0]) = (unique_ptr<::data<FLT>>) new vec<FLT>({ 1,0,0,0,0,0,0,0,0,0 });
	(labels[1]) = (unique_ptr<::data<FLT>>) new vec<FLT>({ 0,1,0,0,0,0,0,0,0,0 });
	(labels[2]) = (unique_ptr<::data<FLT>>) new vec<FLT>({ 0,0,1,0,0,0,0,0,0,0 });
	(labels[3]) = (unique_ptr<::data<FLT>>) new vec<FLT>({ 0,0,0,1,0,0,0,0,0,0 });
	(labels[4]) = (unique_ptr<::data<FLT>>) new vec<FLT>({ 0,0,0,0,1,0,0,0,0,0 });
	(labels[5]) = (unique_ptr<::data<FLT>>) new vec<FLT>({ 0,0,0,0,0,1,0,0,0,0 });
	(labels[6]) = (unique_ptr<::data<FLT>>) new vec<FLT>({ 0,0,0,0,0,0,1,0,0,0 });
	(labels[7]) = (unique_ptr<::data<FLT>>) new vec<FLT>({ 0,0,0,0,0,0,0,1,0,0 });
	(labels[8]) = (unique_ptr<::data<FLT>>) new vec<FLT>({ 0,0,0,0,0,0,0,0,1,0 });
	(labels[9]) = (unique_ptr<::data<FLT>>) new vec<FLT>({ 0,0,0,0,0,0,0,0,0,1 });

	for (int i = 0; i < 10; ++i)
	{
		(tns<FLT>&)*(cyphers[i]) /= (FLT)256;
	}

	tns<FLT> test(*(tns<FLT>*)(cyphers[0]).get());

	pipe<info> pip;
	wx_wrapper wx;
	wx.create_graph_wnd(pip);

	nnb network(
		{
			unique_ptr<nn_params::nn_info>((nn_params::nn_info*)new nn_params::cnn_info
				(9, 9, 4, nn_params::nn_activ_t::elu, nn_params::nn_init_t::normal, 1, 1, 1, nn_params::nn_convo_t::many_to_many, false)),
			unique_ptr<nn_params::nn_info>((nn_params::nn_info*)new nn_params::cnn_info
				(9, 9, 4, nn_params::nn_activ_t::elu, nn_params::nn_init_t::normal, 1, 1, 1, nn_params::nn_convo_t::many_to_many, false)),
			unique_ptr<nn_params::nn_info>((nn_params::nn_info*)new nn_params::cnn_info
				(7, 7, 16, nn_params::nn_activ_t::elu, nn_params::nn_init_t::normal, 1, 1, 1, nn_params::nn_convo_t::one_to_one, true)),
			unique_ptr<nn_params::nn_info>((nn_params::nn_info*)new nn_params::cnn_info
				(3, 3, 16, nn_params::nn_activ_t::elu, nn_params::nn_init_t::normal, 1, 1, 1, nn_params::nn_convo_t::one_to_one, false)),

			unique_ptr<nn_params::nn_info>((nn_params::nn_info*)new nn_params::cnn_2_fnn_info(true)),

			unique_ptr<nn_params::nn_info>((nn_params::nn_info*)new nn_params::fnn_info
				(16, 32, nn_params::nn_activ_t::tanh, nn_params::nn_init_t::normal, 1, 1, 1)),
			unique_ptr<nn_params::nn_info>((nn_params::nn_info*)new nn_params::fnn_info
				(32, 10, nn_params::nn_activ_t::tanh, nn_params::nn_init_t::normal, 1, 1, 1))
		}
	);

	network.train_stoch_mode({ move(cyphers),move(labels),10 }, { nullptr,nullptr,0 },train_mode::NONE,0,&pip,5000,0,0,10,0.095,0.005,0.095,0.005);

	network.pass_fwd(test);


	getchar();
}